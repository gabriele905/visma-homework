version: '3.9'

services:
  rabbitmq:
    restart: always
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"

  worker:
    build: ./
    command: /venv/bin/celery -A celery_app worker -l info
    env_file:
      - .env
    volumes:
      - ./:/code
    depends_on:
      - rabbitmq
      - postgres_db

  celery-beat:
    build: ./
    command: /venv/bin/celery -A celery_app beat -l info
    volumes:
      - ./:/code
    depends_on:
      - rabbitmq

  nginx:
    build: ./nginx
    ports:
      - "1337:80"
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    depends_on:
      - api
    restart: "on-failure"

  api:
    build: ./
    command: sh -c "
                   /venv/bin/python manage.py makemigrations &&
                   /venv/bin/python manage.py migrate &&
                   /venv/bin/python manage.py collectstatic &&
                   /venv/bin/gunicorn config.wsgi --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/static
      - media_volume:/media
    expose:
      - 8000
    restart: "on-failure"
    env_file:
      - .env
    depends_on:
      - postgres_db

  postgres_db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

volumes:
  static_volume:
  media_volume:
  postgres_data:
